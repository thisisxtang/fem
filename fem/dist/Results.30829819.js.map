{"version":3,"sources":["Pet.js","Results.js"],"names":["Pet","props","name","animal","breed","media","location","id","photos","photo","filter","hero","value","React","Component","petfinder","key","secret","Results","search","pet","find","output","searchParams","then","data","pets","Array","isArray","setState","state","map","breeds","join","contact","city","ResultsWithContext","context"],"mappings":"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","file":"Results.30829819.js","sourceRoot":"../src","sourcesContent":["import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nclass Pet extends React.Component {\n  render() {\n    const { name, animal, breed, media, location, id } = this.props;\n\n    let photos = [];\n\n    if (media && media.photos && media.photos.photo) {\n      photos = media.photos.photo.filter(photo => photo[\"@size\"] === \"pn\");\n    }\n\n    let hero = \"http://placecorgi.com/300/300\";\n\n    if (photos[0] && photos[0].value) {\n      hero = photos[0].value;\n    }\n\n    return (\n      <Link to={`/details/${id}`} className=\"pet\">\n        <div className=\"image-container\">\n          <img src={hero} alt={name} />\n        </div>\n        <div className=\"info\">\n          <h1>{name}</h1>\n          <h2>\n            {animal} - {breed} - {location}\n          </h2>\n        </div>\n      </Link>\n    );\n  }\n}\n\nexport default Pet;\n","import React from \"react\";\nimport pf from \"petfinder-client\";\nimport { Consumer } from \"./SearchContext\";\nimport Pet from \"./Pet\";\nimport SearchBox from \"./SearchBox\";\n\nconst petfinder = pf({\n  key: process.env.API_KEY,\n  secret: process.env.API_SECRET\n}); // refer things from env file\n\nclass Results extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pets: []\n    };\n  }\n\n  componentDidMount() {\n    this.search();\n  }\n\n  search = () => {\n    petfinder.pet\n      .find({\n        output: \"full\",\n        location: this.props.searchParams.location,\n        animal: this.props.searchParams.animal,\n        breed: this.props.searchParams.breed\n      })\n      .then(data => {\n        let pets;\n        if (data.petfinder.pets && data.petfinder.pets.pet) {\n          if (Array.isArray(data.petfinder.pets.pet)) {\n            pets = data.petfinder.pets.pet;\n          } else {\n            pets = [data.petfinder.pets.pet];\n          }\n        } else {\n          pets = [];\n        }\n\n        this.setState({\n          pets\n        });\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"search\">\n        <SearchBox search={this.search} />\n        {this.state.pets.map(pet => {\n          let breed;\n          if (Array.isArray(pet.breeds.breed)) {\n            breed = pet.breed.join(\",\");\n          } else {\n            breed = pet.breeds.breed;\n          }\n\n          return (\n            <Pet\n              key={pet.id}\n              name={pet.name}\n              animal={pet.animal}\n              breed={breed}\n              media={pet.media}\n              location={`${pet.contact.city}, ${pet.contact.state}`}\n              id={pet.id}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default function ResultsWithContext(props) {\n  return (\n    <Consumer>\n      {context => <Results {...props} searchParams={context} />}\n    </Consumer>\n  );\n}\n"]}